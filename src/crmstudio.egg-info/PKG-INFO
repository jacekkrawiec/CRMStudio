Metadata-Version: 2.1
Name: crmstudio
Version: 0.1.0
Summary: IRB Model Monitoring Toolkit for Banks
Author: Your Name
Author-email: Your Name <your.email@example.com>
License: This file is intentionally left blank.
Project-URL: Homepage, https://github.com/yourusername/crmstudio
Project-URL: Documentation, https://crmstudio.readthedocs.io
Project-URL: Repository, https://github.com/yourusername/crmstudio.git
Keywords: banking,irb,model-monitoring,risk-management
Classifier: Development Status :: 3 - Alpha
Classifier: Intended Audience :: Financial and Insurance Industry
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Topic :: Office/Business :: Financial
Requires-Python: >=3.1
Description-Content-Type: text/markdown
Provides-Extra: dev
License-File: LICENSE

# CRMStudio - IRB Model Monitoring Toolkit

CRMStudio is a Python package designed for monitoring IRB models (PD, LGD, EAD) locally within your bank infrastructure. It helps you run monitoring checks, evaluate metrics, trigger alerts, and generate reports â€” all **without sharing sensitive data externally**.

Attention: CRMStudio is in alpha stage, not everything is implemented yet. It is not yet available via pip, etc. For now it can be used for PD's discriminaotry power assessment. More features will be available soon.
---

## Quickstart

Get started with CRMStudio in just a few steps:

### 1. Install

```bash
pip install crmstudio
```

### 2. Prepare Configuration

Create a YAML config (e.g., config/monitoring_config.yaml) specifying models, metrics, and thresholds:

```yaml
models:
  pd_model:
    metrics: [psi, gini, ks]
    thresholds:
      psi: 0.25
      gini: 0.6
report:
  output_dir: reports/
  format: html
```

### 3. Local Data

```python
from crmstudio.data.loader import DataLoader
data = DataLoader("data/pd_data.csv").load()
```

### 4. Run Monitoring

```python
from crmstudio.monitoring.pipeline import MonitoringPipeline
MonitoringPipeline(config_path = "config/monitoring_config.yaml").run()
```

### 5. Generate Report

```python
from crmstudio.reports.generator import ReportGenerator
ReportGenerator(results_dir = 'results/', output_dir = 'results/').generate()

- [x] Done! Your model metrics are calculated, alerts triggered if thresholds are exceeded, and reports are ready.
```

## Features

- **Data Quality Checks**: Validate data integrity with various checks.
- **Monitoring Checks**: Continuously monitor model performance and trigger alerts.
- **Report Generation**: Generate customizable reports for regulatory compliance and internal review.

## Contributing

Contributions are welcome! Please read the [CONTRIBUTING.md](CONTRIBUTING.md) for details on our code of conduct, and the process for submitting pull requests.

## License

This project is licensed under the MIT License - see the [LICENSE](LICENSE) file for details.
